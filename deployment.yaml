apiVersion: v1
kind: Namespace
metadata:
  name: authentication
  labels:
   name: authentication
---
apiVersion: v1
kind: Secret
metadata:
 name: jwt-secret
 namespace: authentication
type: Opaque
stringData:
 secret: KO/9ASG/XcOq0QEpxE2/VwDlCYVkBt4Si0ILMb4UYXzm9l+KZ0aJdGf0LZ0OtvPp41KrMuASJmI5mo6XUbkX1FmswAqQRdOvzv1vgugN4kiTPK/zUgRwn8ZZj0qiDG4skP52DyeYJw/bEJQi4NBP2sLxQAJnSjnErVsaQ4a7a8QywidUmzWcEAg3exMPnsyqticoPh/9VQCJZ4W0fS3Lxs7VcmYRb8rsc9Hm84iaoDU4pqDofpNaOUEBQ3DYZA9DZED8eHtmiH6e9LZn9UV59A9SoABXVtpMrjzKLUqgK/11lDcB+ahjY7XVg6zUERalfj095LBVMaH4gycH2MMgEg==
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: deployment
  namespace: authentication
  labels:
    app: authentication
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: authentication
    spec:
      containers:
      - name: authentication
        image: wildapplications/authentication:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 50051
        env:
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: jwt-secret
              key: secret
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: password
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: username
      # [START proxy_container]
      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        command: ["/cloud_sql_proxy", "--dir=/cloudsql",
                  "-instances=wildapps-tab:europe-west3:wildappsuserdb=tcp:3306",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        volumeMounts:
          - name: cloudsql-instance-credentials
            mountPath: /secrets/cloudsql
            readOnly: true
          - name: ssl-certs
            mountPath: /etc/ssl/certs
          - name: cloudsql
            mountPath: /cloudsql
      # [END proxy_container]
      # [START volumes]
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
        - name: cloudsql
          emptyDir:
        - name: ssl-certs
          hostPath:
            path: /etc/ssl/certs
      # [END volumes]
---
apiVersion: v1
kind: Service
metadata:
  name: service
  namespace: authentication
  labels:
    app: authentication
spec:
  type: ClusterIP
  ports:
  - port: 1295
    targetPort: 50051
  selector:
    app: authentication
  externalName: authentication
